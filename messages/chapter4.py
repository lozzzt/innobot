#!/usr/bin/python3
# -*- coding: utf-8 -*-

from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text, ContentTypeFilter
import asyncio

from utils import Log, MyBot, Counter

bot, dp = MyBot().get_bot()
counter = Counter()

class Progress4(StatesGroup):
    msg_1 = State()
    msg_2 = State()
    msg_3 = State()
    msg_4 = State()

def register_handlers_chapter4(dp: Dispatcher):
    dp.register_message_handler(fourth_chapter_welcome, commands="chapter4", state='*')
    dp.register_message_handler(fourth_chapter_welcome, Text(equals="4. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"))
    dp.register_message_handler(fourth_chapter_answer_1, ContentTypeFilter(content_types=types.ContentTypes.TEXT), state=Progress4.msg_1)
    dp.register_message_handler(fourth_chapter_answer_2, ContentTypeFilter(content_types=types.ContentTypes.TEXT), state=Progress4.msg_2)
    dp.register_message_handler(fourth_chapter_answer_3, ContentTypeFilter(content_types=types.ContentTypes.TEXT), state=Progress4.msg_3)
    dp.register_message_handler(fourth_chapter_answer_4, ContentTypeFilter(content_types=types.ContentTypes.TEXT), state=Progress4.msg_4)

async def fourth_chapter_welcome(message: types.Message, state: FSMContext):
    await state.finish()
    Log().getLogger().info("Chapter 4")
    await asyncio.sleep(2)
    
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ú—ã —Å —Ç–æ–±–æ–π –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º (–ø–æ —Å—á–µ—Ç—É, –∞ –Ω–µ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é!) —Ä–∞–∑–¥–µ–ª–µ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é, "
                         "—á—Ç–æ —Ç—ã —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –¥–≤–∏–≥–∞–µ—à—å—Å—è –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –∫—É—Ä—Å–∞ –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–µ—à—å —Å–µ–±—è. ")


    await asyncio.sleep(2)

    await message.answer("–î–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, –∫–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ç–æ –µ—Å—Ç—å –æ–±—Å—É–¥–∏–º, –∫–∞–∫–∞—è –µ—Å—Ç—å "
                         "—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞ –≤ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ü–µ–ª–µ–π –∏ –∑–∞–¥–∞—á, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–∞–∑–Ω—ã–º –£–ü–†.")

    await asyncio.sleep(2)

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("–î–∞, –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è!")
    keyboard.add("–ö—É–¥–∞ –∂ —è –¥–µ–Ω—É—Å—å...")

    await message.answer("–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?", 
                         reply_markup=keyboard)

    await Progress4.msg_1.set()

    async def fourth_chapter_answer_1(message: types.Message):
        await asyncio.sleep(1)
        if(message.text == "–î–∞, –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è!"):
            await message.answer("–£–∂–µ –Ω–∞—á–∏–Ω–∞–µ–º", reply_markup=types.ReplyKeyboardRemove())
        else:
            await message.answer("–ü–æ—Ö–æ–∂–µ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –¥—É—Ö–µ. –õ–æ–≤–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É (–∫–∞–∫–æ–π-—Ç–æ –¥–æ–±—Ä—ã–π"
                                 "—Å–º–∞–π–ª –¥–æ–±–∞–≤–∏—Ç—å). –ê —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤—Å—ë –æ–±—ä—è—Å–Ω–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ. ", 
                                 reply_markup=types.ReplyKeyboardRemove())

        await fourth_chapter_block_1(message)

    async def fourth_chapter_block_1(message: types.Message):
        await asyncio.sleep(1)
        await message.answer("–ù–∞—á–Ω–µ–º —Å –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–µ–ª–µ–π —Ä–∞–∑–Ω—ã–º —Ç–∏–ø–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. "
                             "–°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ: —Å—Ç–∞–≤—è —Ü–µ–ª–∏, —É—á–∏—Ç—ã–≤–∞–π –£–ü–† (—É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è) —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –ê —Ç–µ–ø–µ—Ä—å –±–ª–∏–∂–µ –∫ –¥–µ–ª—É.  "
                             "–∞ –≥–¥–µ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è. ", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)


        await message.answer("–ï—Å–ª–∏ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –†1 (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –≤—ã—Å–æ–∫–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ –Ω–∏–∑–∫–æ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –∑–∞–¥–∞—á–µ),"
                             "–¥–∞–≤–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–µ, —á–µ—Ç–∫–∏–µ –∏ —è—Å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ù–æ–≤–∏—á–æ–∫ –≤ –∑–∞–¥–∞—á–µ –æ–±—ã—á–Ω–æ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∞–º –ø–æ —Å–µ–±–µ, –∞ —è—Å–Ω–æ–µ"
                             "–ø–æ–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –ø–æ–º–æ–∂–µ—Ç –µ–º—É –Ω–µ –Ω–∞–ª–æ–º–∞—Ç—å –¥—Ä–æ–≤ –∏ —Å—Ç–∞–Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å—Ç–∏–º—É–ª–æ–º. ", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)

        await message.answer("–ö–ê–†–¢–ò–ù–ö–ê "
"–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π –¥–ª—è –†1 "
"1. –†–∞—Å—Å–∫–∞–∂–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏."
"2. –û–ø–∏—à–∏, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –∏ –ø–µ—Ä–µ—á–∏—Å–ª–∏ –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏."
"3. –ü–æ–∫–∞–∂–∏ –∏ –¥–∞–π –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å."
"4. –ò—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫–∏.  ", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)

        await message.answer("–î–ª—è –†2 —Å—Ç–æ–∏—Ç —É–º–µ–Ω—å—à–∏—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –Ω–æ –¥–æ–≤–æ–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—Å—É–¥–∏—Ç—å, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å. "
                             "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å:  –≤—Å–µ–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (¬´–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è¬ª), –ø–æ–æ–±–µ—â–∞–π –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö (¬´–ë—É–¥—É—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –æ–±—Ä–∞—â–∞–π—Å—è!¬ª).",
                             reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)

        await message.answer("–ö–ê–†–¢–ò–ù–ö–ê "
"–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π –¥–ª—è –†2"
"1. –†–∞—Å—Å–∫–∞–∂–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å—Ä–æ–∫–∏."
"2. –°–ø—Ä–æ—Å–∏, –∫–∞–∫ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å?"
"3. –£—Ç–æ–Ω–∏, –ø–æ—á–µ–º —Ç–∞–∫?"
"4. –ü–æ–∫–∞–∂–∏ –ª–æ–≥–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏."
"5. –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ –±–ª–∏–∂–∞–π—à–µ–π —Ç–æ—á–∫–µ –∫–æ–Ω—Ç—Ä–æ–ª—è", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)


        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add("–î–∞, –ø—Ä–µ–¥–µ–ª—å–Ω–æ")
        keyboard.add("–í —Ü–µ–ª–æ–º, –≤–Ω–∏–∫–∞—é")

        await message.answer("–¢–µ–±–µ –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ?", reply_markup=keyboard)

        await Progress4.msg_2.set()


    async def fourth_chapter_answer_2(message: types.Message):
        asyncio.sleep(1)

        if(message.text == "–î–∞, –ø—Ä–µ–¥–µ–ª—å–Ω–æ"):
            await message.answer("–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üëç", reply_markup=types.ReplyKeyboardRemove())
        else:
            await message.answer("–•–æ—Ä–æ—à–æ, –∏–¥–µ–º –¥–∞–ª—å—à–µ!", reply_markup=types.ReplyKeyboardRemove())

        await fourth_chapter_block_2(message)

    async def fourth_chapter_block_2(message: types.Message):
        await asyncio.sleep(2)

        await message.answer("–£ –†3 ‚Äì —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞  —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ –≤—ã—Å–æ–∫–æ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é -  —Å—Ç–æ–∏—Ç —Å–ø—Ä–æ—Å–∏—Ç—å, –∫–∞–∫ –±—ã –æ–Ω –≤—ã–ø–æ–ª–Ω–∏–ª —ç—Ç—É –∑–∞–¥–∞—á—É, "
                             "–≤—ã—Å–ª—É—à–∞—Ç—å –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å  –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π. –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å —Ç–≤–æ–µ–π –ø–æ–º–æ—â—å—é —Å–∞–º –Ω–∞—à–µ–ª –º–æ—Ç–∏–≤–∞—Ü–∏—é –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏, "
                             "—É–≤–∏–¥–µ–ª —Å–≤–æ–π –∏–Ω—Ç–µ—Ä–µ—Å: –∑–∞—á–µ–º –º–Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É?", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)
        
        await message.answer("–ö–ê–†–¢–ò–ù–ö–ê "
"–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π –¥–ª—è –†3"
"1. –†–∞—Å—Å–∫–∞–∂–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å—Ä–æ–∫–∏."
"2. –ü–æ—Ä–∞–±–æ—Ç–∞–π —Å –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: –ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –æ–Ω, –ø–æ—á–µ–º—É –≤–∞–∂–Ω–æ."
"3. –°–ø—Ä–æ—Å–∏, —Å–ø—Ä–∞–≤–∏—Ç—Å—è –ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫? –ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?"
"4. –ü–æ—Å—Ç–∞–≤—å —Ç–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è.", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)

        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add("–ù–µ –Ω–∞–¥–æ –Ω–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏, –Ω–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
        keyboard.add("–°–∞–º —Ä–∞—Å—Å–∫–∞–∂–∏")

        await message.answer("–ü—Ä–æ –†4 –ø–æ–ø—Ä–æ–±—É–µ—à—å —Å–∞–º?", reply_markup=keyboard)

        await Progress4.msg_3.set()


    async def fourth_chapter_answer_3(message: types.Message):
        await asyncio.sleep(1)

        await message.answer("–†4 —Å —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º –ø—Ä–∏–º–µ—Ç—Å—è –∑–∞ —Å–ª–æ–∂–Ω—É—é, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –µ–º—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–±–æ–¥—É –¥–µ–π—Å—Ç–≤–∏–π. "
                             "–ï–º—É –Ω–µ –Ω—É–∂–Ω—ã –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Å—Ç–∏–º—É–ª—ã. –û–¥–Ω–∞–∫–æ —Å–æ–≥–ª–∞—Å—É–π —Å –Ω–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏."
                             , reply_markup=types.ReplyKeyboardRemove())
        
        await asyncio.sleep(2)


        await message.answer("–ö–ê–†–¢–ò–ù–ö–ê "
"–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π –¥–ª—è –†4"
"1. –†–∞—Å—Å–∫–∞–∂–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å—Ä–æ–∫–∏."
"2. –°–ø—Ä–æ—Å–∏, –µ—Å—Ç—å –ª–∏ –≤–æ–ø—Ä–æ—Å—ã?"
"3. –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ —Ç–æ—á–∫–µ –∫–æ–Ω—Ç—Ä–æ–ª—è.", reply_markup=types.ReplyKeyboardRemove())

        await asyncio.sleep(2)

        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add("–ö–æ–Ω–µ—á–Ω–æ!")
        keyboard.add("–ù–µ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏")

        await message.answer("–î–ª—è –ø–æ–ª–Ω–æ—Ç—ã –∫–∞—Ä—Ç–∏–Ω—ã –¥–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —Å —Ç–æ–±–æ–π, –∫–∞–∫ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–µ–ª–µ–π –ø–æ SMART –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. "
                             "–ü–æ–º–Ω–∏—à—å –ª–∏ —Ç—ã, —á—Ç–æ —Ç–∞–∫–æ–µ —Å–∏—Å—Ç–µ–º–∞ SMART? ", reply_markup=keyboard)

        await Progress4.msg_4.set()

    async def fourth_chapter_answer_4(message: types.Message):
        await asyncio.sleep(1)

        if(message.text == "–ö–æ–Ω–µ—á–Ω–æ!"):
            await message.answer("–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", reply_markup=types.ReplyKeyboardRemove())
        else:
            await message.answer("–ö–æ–Ω–µ—á–Ω–æ!", reply_markup=types.ReplyKeyboardRemove())
    
        await  fourth_chapter_block_3(message)

    async def fourth_chapter_block_3(messages: types.Message):
        await asyncio.sleep(1)

        await message.answer("SMART ‚Äì —ç—Ç–æ –º–µ—Ç–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è —Ü–µ–ª–∏, –≤–∫–ª—é—á–∞—é—â–∏–π –≤ —Å–µ–±—è: –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å, –∏–∑–º–µ—Ä–∏–º–æ—Å—Ç—å, –¥–æ—Å—Ç–∏–∂–∏–º–æ—Å—Ç—å, –≤–∞–∂–Ω–æ—Å—Ç—å –∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å –ø–æ —Å—Ä–æ–∫–∞–º. "
                             , reply_markup=types.ReplyKeyboardRemove())

